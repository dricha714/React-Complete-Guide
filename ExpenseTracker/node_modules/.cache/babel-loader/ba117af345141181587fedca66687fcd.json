{"ast":null,"code":"var _jsxFileName = \"/Users/solocoder32/CodingProjects/React/Web/react-complete-guide/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport \"./Expenses.css\";\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"../ExpenseFilter/ExpenseFilter\";\nimport Card from \"../UI/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangedHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    console.log(selectedYear);\n  }; // only items that have the same year as the filteredYear will be stored in the\n  // filteredExpenseList\n\n\n  const filterdExpenseList = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expense(s) found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 24\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), filterdExpenseList.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 46\n      }, this), filterdExpenseList.length === 0 && filterdExpenseList.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","ExpensesFilter","Card","Expenses","props","filteredYear","setFilteredYear","filterChangedHandler","selectedYear","console","log","filterdExpenseList","items","filter","expense","date","getFullYear","toString","expenseContent","length","map","title","amount","id"],"sources":["/Users/solocoder32/CodingProjects/React/Web/react-complete-guide/src/components/Expenses/Expenses.js"],"sourcesContent":["import \"./Expenses.css\";\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"../ExpenseFilter/ExpenseFilter\";\nimport Card from \"../UI/Card\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangedHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    console.log(selectedYear);\n  };\n\n  // only items that have the same year as the filteredYear will be stored in the\n  // filteredExpenseList\n  const filterdExpenseList = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expenseContent = <p>No expense(s) found.</p>\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangedHandler}\n        />\n        {filterdExpenseList.length === 0 && (<p>No expenses found.</p>) }\n        {filterdExpenseList.length === 0 && (\n          filterdExpenseList.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            ></ExpenseItem>\n          ))\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;EAEA,MAAMQ,oBAAoB,GAAIC,YAAD,IAAkB;IAC7CF,eAAe,CAACE,YAAD,CAAf;IACAC,OAAO,CAACC,GAAR,CAAYF,YAAZ;EACD,CAHD,CAH0B,CAQ1B;EACA;;;EACA,MAAMG,kBAAkB,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;IACzD,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CZ,YAAjD;EACD,CAF0B,CAA3B;;EAIA,IAAIa,cAAc,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAArB;;EAEA,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,EAAC,UAAhB;MAAA,wBACE,QAAC,cAAD;QACE,QAAQ,EAAEb,YADZ;QAEE,cAAc,EAAEE;MAFlB;QAAA;QAAA;QAAA;MAAA,QADF,EAKGI,kBAAkB,CAACQ,MAAnB,KAA8B,CAA9B,iBAAoC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALvC,EAMGR,kBAAkB,CAACQ,MAAnB,KAA8B,CAA9B,IACCR,kBAAkB,CAACS,GAAnB,CAAwBN,OAAD,iBACrB,QAAC,WAAD;QAEE,KAAK,EAAEA,OAAO,CAACO,KAFjB;QAGE,MAAM,EAAEP,OAAO,CAACQ,MAHlB;QAIE,IAAI,EAAER,OAAO,CAACC;MAJhB,GACOD,OAAO,CAACS,EADf;QAAA;QAAA;QAAA;MAAA,QADF,CAPJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CArCD;;GAAMpB,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}